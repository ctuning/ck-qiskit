# After changing this file, check it on:
#   http://lint.travis-ci.org/

os:         linux
dist:       trusty
language:   python

python:
    - 3.6

env:
    global:
        - TRAVIS_CK_WHICH_TEST=hello
        - TRAVIS_CK_CXX_COMPILER=gcc
    matrix:
        - TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_clifford_simulator
        - TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_unitary_simulator
        - TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_qiskit_simulator
        - TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_qasm_simulator
        - TRAVIS_CK_WHICH_TEST=vqe_hydrogen TRAVIS_CK_USE_BACKEND=local_qasm_simulator

matrix:
    include:
        - os: osx
          language: generic
          python:   3.6
          env:      TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_clifford_simulator
        - os: osx
          language: generic
          python:   3.6
          env:      TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_unitary_simulator
        - os: osx
          language: generic
          python:   3.6
          env:      TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_qiskit_simulator
        - os: osx
          language: generic
          python:   3.6
          env:      TRAVIS_CK_WHICH_TEST=hello TRAVIS_CK_USE_BACKEND=local_qasm_simulator
        - os: osx
          language: generic
          python:   3.6
          env:      TRAVIS_CK_WHICH_TEST=vqe_hydrogen TRAVIS_CK_USE_BACKEND=local_qasm_simulator

before_install:
    # For C++14 we need at least gcc-6:
    - |
        if [ $TRAVIS_OS_NAME == "osx" ]; then
            brew update                                                         # this swaps python versions and makes 3 the default one
            brew reinstall python                                               # install and link python3 and pip3 to /usr/local/bin
            export PATH=/usr/local/opt/python/libexec/bin:$PATH
            brew install gcc\@6 || brew link --overwrite gcc\@6                 # to avoid symlink conflict with oclint
            export CK_PLATFORM_INDEX=2                                          # used later by CK
        else
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update -qq
            sudo apt-get install -qq g++-6
            sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90
            sudo apt-get install python-pip libblas-dev liblapack-dev
            export CK_PLATFORM_INDEX=1                                          # used later by CK
        fi

install:
    - echo "os=${TRAVIS_OS_NAME}, python=${TRAVIS_PYTHON_VERSION}, compiler=${TRAVIS_CK_CXX_COMPILER}, backend=${TRAVIS_CK_USE_BACKEND}, which_test=${TRAVIS_CK_WHICH_TEST}"
    - which python
    - python --version
    - python -m pip install --ignore-installed --verbose pip setuptools         # make sure pip is also up to date no matter what
    - python -m pip install -r requirements.txt                                 # CK kernel itself and some extra-CK dependencies
    - ck pull repo:ck-qiskit                                                    # trigger pulling dependent repositories
    - echo $CK_PLATFORM_INDEX | ck detect platform.os --update_platform_init    # set the platform to generic-linux (1) or generic-macos (2)
    -          ck detect soft:compiler.python --full_path=`which python`        # pick the one Travis has set for us in the PATH
    - SCIPY=`python -m pip show scipy | awk '$1=="Location:" {print $2}'`/scipy/__init__.py
    - ck detect soft:lib.python.scipy --full_path=$SCIPY                        # pick the one installed via requirements.txt
    - echo 0 | ck detect soft:compiler.${TRAVIS_CK_CXX_COMPILER}                # force detection of a specific one
    - echo   | ck detect soft:lib.blas
    - echo   | ck detect soft:lib.lapack
    -          ck install package:lib-qiskit                                    # have to install this again into CK's registered space


script:
    - |
        if [ $TRAVIS_CK_WHICH_TEST == "vqe_hydrogen" ]; then
            ck run program:qiskit-vqe --env.VQE_MAX_ITERATIONS=10 --env.CK_IBM_BACKEND=${TRAVIS_CK_USE_BACKEND}
        else
            ck run program:qiskit-demo --cmd_key=${TRAVIS_CK_WHICH_TEST} --env.CK_IBM_BACKEND=${TRAVIS_CK_USE_BACKEND}
        fi
